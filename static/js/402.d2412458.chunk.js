"use strict";(self.webpackChunkedu_core_dev=self.webpackChunkedu_core_dev||[]).push([[46,402],{9402:(e,s,n)=>{n.r(s),n.d(s,{default:()=>l});var t=n(1046),a=n(579);const l=function(){return(0,a.jsxs)("div",{style:{margin:50},children:[(0,a.jsx)(t.default,{step:"3",language:"bash",code:"cd ~/code/packages/my-react-component\nyarn add @splunk/splunk-utils"}),(0,a.jsx)(t.default,{step:"6",language:"jsx",code:"import * as config from '@splunk/splunk-utils/config';\nimport { createRESTURL } from '@splunk/splunk-utils/url';\nimport { getDefaultFetchInit } from '@splunk/splunk-utils/fetch';"}),(0,a.jsx)(t.default,{step:"8",language:"jsx",code:"    const url = createRESTURL(uri + \"?output_mode=json\", {\n        app: config.app,\n        owner: config.username,\n        sharing: 'app'\n    });"}),(0,a.jsx)(t.default,{step:"9",language:"jsx",code:"    let fetchInit = getDefaultFetchInit();\n    fetchInit.method = method;\n    if (method.toLowerCase() === 'post') {\n        fetchInit.body = new URLSearchParams(JSON.parse(body));\n    }"}),(0,a.jsx)(t.default,{step:"10",language:"jsx",code:"    const response = await fetch(url, fetchInit);\n    setData(await response.json());"}),(0,a.jsx)(t.default,{step:"17",language:"json",code:'{"name": "myindex"}'}),(0,a.jsx)(t.default,{step:"30",language:"json",code:'{"name": "myuser", "password": "mypassword", "realm": "myrealm"}'})]})}},1046:(e,s,n)=>{n.r(s),n.d(s,{default:()=>d});var t=n(5043),a=n(1045),l=n(9336),o=n(683),r=n(2999),c=n.n(r),u=(n(3817),n(6149),n(3636),n(337),n(3994),n(3839),n(4194),n(8496),n(7337),n(4608),n(579));const d=function(e){let{step:s,code:n,language:r}=e;return(0,t.useEffect)((()=>{c().highlightAll()}),[]),(0,u.jsxs)("div",{children:[(0,u.jsx)(l.A,{}),(0,u.jsxs)(o.A,{direction:"row",spacing:5,sx:{margin:3},children:[(0,u.jsx)(a.A,{sx:{bgcolor:"#f56a00",margin:2},children:s}),(0,u.jsx)("pre",{style:{width:"80%"},children:(0,u.jsx)("code",{className:`language-${r}`,children:n})})]})]})}},4608:()=>{}}]);
//# sourceMappingURL=402.d2412458.chunk.js.map