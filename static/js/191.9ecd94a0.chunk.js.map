{"version":3,"file":"static/js/191.9ecd94a0.chunk.js","mappings":"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","sources":["courses/bsca/Lab7.jsx","courses/bsca/Snippet.jsx","../node_modules/prismjs/components/prism-jsx.js"],"sourcesContent":["import Snippet from './Snippet';\n\nfunction Lab7() {\n\n\n\nconst step6 = `cd /opt/splunk/etc/apps/buttercup`;\n\nconst step7 = `nano README.txt`;\n\nconst step8 = `Buttercup Games vX.Y.Z\nMM YYYY\nThis is the latest release of the Buttercup Games app.`;\n\nconst step10 = `cd metadata\ncat local.meta >> default.meta\nrm local.meta`;\n\nconst step11 = `cd ../local\nll`;\n\nconst step12 = `rm app.conf`;\n\nconst step13 = `mv *.conf ../default\nll ../default`;\n\nconst step14 = `cp -rf data/ ../default\ncd ..\nrm -rf local`;\n\nconst step17 = `nano default/app.conf`;\n\nconst step18 = `[package]\nid = buttercup`;\n\nconst step20 = `sudo pip install splunk-appinspect`;\n\nconst step21 = `splunk-appinspect inspect /opt/splunk/etc/apps/buttercup --mode precert`;\n\nconst step24 = `cd /opt/splunk/etc/apps/buttercup\n\nrm -rf bin/__pycache__\nrm -rf bin/splunklib/__pycache__\nrm -rf bin/splunklib/modularinput/__pycache__\nrm -rf bin/splunklib/searchcommands/__pycache__`;\n\nconst step25 = `splunk-appinspect inspect /opt/splunk/etc/apps/buttercup --mode precert`;\n\nconst step26 = `cd /opt/splunk/bin\n./splunk package app buttercup -auth {splunk-id}:{password}`;\n\nconst step28 = `./splunk remove app buttercup -auth {splunk-id}:{password}`;\n\nconst step30 = `./splunk install app /opt/splunk/share/splunk/app_packages/buttercup.spl -auth {splunk-id}:{password}`;\n\n\n\n    return(<div style={{margin:50}}>\n        <Snippet step=\"6\" code={step6} language=\"language-bash\"/>\n        <Snippet step=\"7\" code={step7} language=\"language-bash\"/>\n        <Snippet step=\"8\" code={step8} language=\"language-makefile\"/>\n        <Snippet step=\"10\" code={step10} language=\"language-bash\"/>\n        <Snippet step=\"11\" code={step11} language=\"language-bash\"/>\n        <Snippet step=\"12\" code={step12} language=\"language-bash\"/>\n        <Snippet step=\"13\" code={step13} language=\"language-bash\"/>\n        <Snippet step=\"14\" code={step14} language=\"language-bash\"/>\n        <Snippet step=\"17\" code={step17} language=\"language-bash\"/>\n        <Snippet step=\"18\" code={step18} language=\"language-properties\"/>\n        <Snippet step=\"20\" code={step20} language=\"language-bash\"/>\n        <Snippet step=\"21\" code={step21} language=\"language-bash\"/>\n        <Snippet step=\"24\" code={step24} language=\"language-bash\"/>\n        <Snippet step=\"25\" code={step25} language=\"language-bash\"/>\n        <Snippet step=\"26\" code={step26} language=\"language-bash\"/>\n        <Snippet step=\"28\" code={step28} language=\"language-bash\"/>\n        <Snippet step=\"30\" code={step30} language=\"language-bash\"/>\n    </div>);\n\n}\n\nexport default Lab7;\n","import React, { useEffect } from \"react\";\n\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport Stack from '@mui/material/Stack';\n\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-python';               // Python\nimport 'prismjs/components/prism-bash';                 // CLI\nimport 'prismjs/components/prism-javascript';           // JavaScript\nimport 'prismjs/components/prism-jsx';                  // React\nimport 'prismjs/components/prism-makefile';             // plain text\nimport 'prismjs/components/prism-properties';           // .conf files\nimport 'prismjs/components/prism-splunk-spl';           // SPL\nimport 'prismjs/components/prism-uri';                  // URLs\nimport '../../prism.css';\n\nfunction Snippet({step, code, language}) {\n\n    useEffect(() => {\n        Prism.highlightAll();\n    },[]);\n\n    return(<div>\n        <Divider/>\n        <Stack direction=\"row\" spacing={5} sx={{margin:3}}>\n            <Avatar sx={{ bgcolor:'#f56a00', margin: 2 }}>{step}</Avatar>\n            <pre style={{width:'80%'}}><code className={language}>{code}</code></pre>\n        </Stack>\n    </div>);\n\n}\n\nexport default Snippet;\n","(function (Prism) {\n\n\tvar javascript = Prism.util.clone(Prism.languages.javascript);\n\n\tvar space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n\tvar braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n\tvar spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n\n\t/**\n\t * @param {string} source\n\t * @param {string} [flags]\n\t */\n\tfunction re(source, flags) {\n\t\tsource = source\n\t\t\t.replace(/<S>/g, function () { return space; })\n\t\t\t.replace(/<BRACES>/g, function () { return braces; })\n\t\t\t.replace(/<SPREAD>/g, function () { return spread; });\n\t\treturn RegExp(source, flags);\n\t}\n\n\tspread = re(spread).source;\n\n\n\tPrism.languages.jsx = Prism.languages.extend('markup', javascript);\n\tPrism.languages.jsx.tag.pattern = re(\n\t\t/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source\n\t);\n\n\tPrism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/;\n\tPrism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;\n\tPrism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n\tPrism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n\n\tPrism.languages.insertBefore('inside', 'attr-name', {\n\t\t'spread': {\n\t\t\tpattern: re(/<SPREAD>/.source),\n\t\t\tinside: Prism.languages.jsx\n\t\t}\n\t}, Prism.languages.jsx.tag);\n\n\tPrism.languages.insertBefore('inside', 'special-attr', {\n\t\t'script': {\n\t\t\t// Allow for two levels of nesting\n\t\t\tpattern: re(/=<BRACES>/.source),\n\t\t\talias: 'language-javascript',\n\t\t\tinside: {\n\t\t\t\t'script-punctuation': {\n\t\t\t\t\tpattern: /^=(?=\\{)/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.jsx\n\t\t\t},\n\t\t}\n\t}, Prism.languages.jsx.tag);\n\n\t// The following will handle plain text inside tags\n\tvar stringifyToken = function (token) {\n\t\tif (!token) {\n\t\t\treturn '';\n\t\t}\n\t\tif (typeof token === 'string') {\n\t\t\treturn token;\n\t\t}\n\t\tif (typeof token.content === 'string') {\n\t\t\treturn token.content;\n\t\t}\n\t\treturn token.content.map(stringifyToken).join('');\n\t};\n\n\tvar walkTokens = function (tokens) {\n\t\tvar openedTags = [];\n\t\tfor (var i = 0; i < tokens.length; i++) {\n\t\t\tvar token = tokens[i];\n\t\t\tvar notTagNorBrace = false;\n\n\t\t\tif (typeof token !== 'string') {\n\t\t\t\tif (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n\t\t\t\t\t// We found a tag, now find its kind\n\n\t\t\t\t\tif (token.content[0].content[0].content === '</') {\n\t\t\t\t\t\t// Closing tag\n\t\t\t\t\t\tif (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n\t\t\t\t\t\t\t// Pop matching opening tag\n\t\t\t\t\t\t\topenedTags.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (token.content[token.content.length - 1].content === '/>') {\n\t\t\t\t\t\t\t// Autoclosed tag, ignore\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Opening tag\n\t\t\t\t\t\t\topenedTags.push({\n\t\t\t\t\t\t\t\ttagName: stringifyToken(token.content[0].content[1]),\n\t\t\t\t\t\t\t\topenedBraces: 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n\n\t\t\t\t\t// Here we might have entered a JSX context inside a tag\n\t\t\t\t\topenedTags[openedTags.length - 1].openedBraces++;\n\n\t\t\t\t} else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n\n\t\t\t\t\t// Here we might have left a JSX context inside a tag\n\t\t\t\t\topenedTags[openedTags.length - 1].openedBraces--;\n\n\t\t\t\t} else {\n\t\t\t\t\tnotTagNorBrace = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (notTagNorBrace || typeof token === 'string') {\n\t\t\t\tif (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n\t\t\t\t\t// Here we are inside a tag, and not inside a JSX context.\n\t\t\t\t\t// That's plain text: drop any tokens matched.\n\t\t\t\t\tvar plainText = stringifyToken(token);\n\n\t\t\t\t\t// And merge text with adjacent text\n\t\t\t\t\tif (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n\t\t\t\t\t\tplainText += stringifyToken(tokens[i + 1]);\n\t\t\t\t\t\ttokens.splice(i + 1, 1);\n\t\t\t\t\t}\n\t\t\t\t\tif (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n\t\t\t\t\t\tplainText = stringifyToken(tokens[i - 1]) + plainText;\n\t\t\t\t\t\ttokens.splice(i - 1, 1);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\n\t\t\t\t\ttokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (token.content && typeof token.content !== 'string') {\n\t\t\t\twalkTokens(token.content);\n\t\t\t}\n\t\t}\n\t};\n\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tif (env.language !== 'jsx' && env.language !== 'tsx') {\n\t\t\treturn;\n\t\t}\n\t\twalkTokens(env.tokens);\n\t});\n\n}(Prism));\n"],"names":["_jsxs","style","margin","children","_jsx","Snippet","step","code","language","_ref","useEffect","Prism","Divider","Stack","direction","spacing","sx","Avatar","bgcolor","width","className","javascript","util","clone","languages","space","source","braces","spread","re","flags","replace","RegExp","jsx","extend","tag","pattern","inside","insertBefore","alias","rest","stringifyToken","token","content","map","join","walkTokens","tokens","openedTags","i","length","notTagNorBrace","type","tagName","pop","push","openedBraces","plainText","splice","Token","hooks","add","env"],"sourceRoot":""}