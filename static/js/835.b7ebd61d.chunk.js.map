{"version":3,"file":"static/js/835.b7ebd61d.chunk.js","mappings":"iMAmHA,QA7GA,WAuFI,OArFAA,EAAAA,EAAAA,YAAU,KACNC,IAAAA,cAAoB,GACtB,KAmFKC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAACC,OAAO,IAAIC,SAAA,EAC3BC,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,IAAIC,KAhFb,oCAgF0BC,SAAS,mBACzCJ,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,IAAIC,KA/Eb,2BA+E0BC,SAAS,mBACzCJ,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,IAAIC,KA9Eb,yeA8E0BC,SAAS,qBACzCJ,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,IAAIC,KA/Db,0BA+D0BC,SAAS,mBACzCJ,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,IAAIC,KA9Db,8IA8D0BC,SAAS,4BACzCJ,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,KAAKC,KAxDb,sBAwD2BC,SAAS,mBAC3CJ,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,KAAKC,KAvDb,6DAuD2BC,SAAS,4BAC3CJ,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,KAAKC,KApDb,iCAoD2BC,SAAS,mBAC3CJ,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,KAAKC,KAnDb,6GAmD2BC,SAAS,mBAC3CJ,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,KAAKC,KAjDb,kHAiD2BC,SAAS,mBAC3CJ,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,KAAKC,KA/Cb,2BA+C2BC,SAAS,mBAC3CJ,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,KAAKC,KA9Cb,2LA8C2BC,SAAS,qBAC3CJ,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,KAAKC,KAvCb,yFAuC2BC,SAAS,qBAC3CJ,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,KAAKC,KAlCb,qMAkC2BC,SAAS,qBAC3CJ,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,KAAKC,KA1Bb,6GA0B2BC,SAAS,mBAC3CJ,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,KAAKC,KAxBb,kHAwB2BC,SAAS,mBAC3CJ,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,KAAKC,KAtBb,mHAsB2BC,SAAS,oBAGnD,C,gJCrFA,QAhBA,SAAiBC,GAA0B,IAAzB,KAACH,EAAI,KAAEC,EAAI,SAAEC,GAASC,EAMpC,OAJAX,EAAAA,EAAAA,YAAU,KACNC,IAAAA,cAAoB,GACtB,KAEKC,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACHC,EAAAA,EAAAA,KAACM,EAAAA,EAAO,KACRV,EAAAA,EAAAA,MAACW,EAAAA,EAAK,CAACC,UAAU,MAAMC,QAAS,EAAGC,GAAI,CAACZ,OAAO,GAAGC,SAAA,EAC9CC,EAAAA,EAAAA,KAACW,EAAAA,EAAM,CAACD,GAAI,CAAEZ,OAAQ,GAAIC,SAAEG,KAC5BF,EAAAA,EAAAA,KAAA,OAAKH,MAAO,CAACe,MAAM,OAAOb,UAACC,EAAAA,EAAAA,KAAA,QAAMa,UAAWT,EAASL,SAAEI,WAInE,C","sources":["courses/bsca/Lab5.js","courses/bsca/Solution.js"],"sourcesContent":["import React, { useEffect } from \"react\";\n\nimport Solution from './Solution';\n\nimport Prism from 'prismjs';\n\nfunction Lab5() {\n\n    useEffect(() => {\n        Prism.highlightAll();\n    },[]);\n\n\n\nconst step2 = `cd /opt/splunk/etc/apps/buttercup`;\n\nconst step3 = `nano bin/bcgEndpoints.py`;\n\nconst step4 = `from splunk.persistconn.application import PersistentServerConnectionApplication\nimport json\n\nclass Echo(PersistentServerConnectionApplication):\n    def __init__(self, _command_line, _command_arg):\n        super(PersistentServerConnectionApplication, self).__init__()\n\n    def handle(self, in_bytes):\n        request = json.loads(in_bytes)        \n        #payload = json.dumps(request)\n        return {\n            'payload': payload,\n            'status': 200\n        }\n`;\n\nconst step8 = `nano local/restmap.conf`;\n\nconst step9 = `[script:bcg_echo]\nmatch = /bcg/echo\nscript = bcgEndpoints.py\nscripttype = persist\nhandler = bcgEndpoints.Echo\npython.version = python3`;\n\nconst step13 = `nano local/web.conf`;\n\nconst step14 = `[expose:bcg_echo]\nmethods = GET,POST\npattern = /bcg/echo`;\n\nconst step16 = `/opt/splunk/bin/splunk restart`;\n\nconst step17 = `curl -k -X GET -u {splunk-id}:{password} \\\n--url \"https://localhost:8089/services/bcg/echo?myGetArg=myvalue\"`;\n\nconst step19 = `curl -k -X POST -u {splunk-id}:{password} \\\n--url https://localhost:8089/services/bcg/echo -d \"myPostArg=myvalue\"`;\n\nconst step21 = `nano bin/bcgEndpoints.py`;\n\nconst step22 = `\n        method = request['method'].lower()\n        if method == \"post\":\n            data = request['form']\n        elif method == \"get\":\n            data = request['query']\n`;\n\nconst step23 = `\n        payload = {}\n        for key,val in data:\n            payload[key] = val\n`;\n\nconst step24 = `\n        #payload = json.dumps(request)\n        return {\n            'payload': payload,\n            'status': 200,\n            'headers': { 'Content-Type':'application/json' }\n        }\n`;\n\nconst step26 = `curl -k -X GET -u {splunk-id}:{password} \\\n--url \"https://localhost:8089/services/bcg/echo?myGetArg=myvalue\"`;\n\nconst step28 = `curl -k -X POST -u {splunk-id}:{password} \\\n--url https://localhost:8089/services/bcg/echo -d \"myPostArg=myvalue\"`;\n\nconst step30 = `curl -k -X GET -u {splunk-id}:{password} \\\n--url https://localhost:8089/services/bcg/echo -d \"myGetArg=myvalue\" -i`;\n\n\n\n    return(<div style={{margin:50}}>\n        <Solution step=\"2\" code={step2} language=\"language-bash\"/>\n        <Solution step=\"3\" code={step3} language=\"language-bash\"/>\n        <Solution step=\"4\" code={step4} language=\"language-python\"/>\n        <Solution step=\"8\" code={step8} language=\"language-bash\"/>\n        <Solution step=\"9\" code={step9} language=\"language-solution-file\"/>\n        <Solution step=\"13\" code={step13} language=\"language-bash\"/>\n        <Solution step=\"14\" code={step14} language=\"language-solution-file\"/>\n        <Solution step=\"16\" code={step16} language=\"language-bash\"/>\n        <Solution step=\"17\" code={step17} language=\"language-bash\"/>\n        <Solution step=\"19\" code={step19} language=\"language-bash\"/>\n        <Solution step=\"21\" code={step21} language=\"language-bash\"/>\n        <Solution step=\"22\" code={step22} language=\"language-python\"/>\n        <Solution step=\"23\" code={step23} language=\"language-python\"/>\n        <Solution step=\"24\" code={step24} language=\"language-python\"/>\n        <Solution step=\"26\" code={step26} language=\"language-bash\"/>\n        <Solution step=\"28\" code={step28} language=\"language-bash\"/>\n        <Solution step=\"30\" code={step30} language=\"language-bash\"/>\n    </div>);\n\n}\n\nexport default Lab5;\n","import React, { useEffect } from \"react\";\n\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport Stack from '@mui/material/Stack';\n\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-python';\nimport 'prismjs/components/prism-bash';\nimport 'prismjs/components/prism-solution-file';\nimport '../../prism.css';\n\nfunction Solution({step, code, language}) {\n\n    useEffect(() => {\n        Prism.highlightAll();\n    },[]);\n\n    return(<div>\n        <Divider/>\n        <Stack direction=\"row\" spacing={5} sx={{margin:3}}>\n            <Avatar sx={{ margin: 2 }}>{step}</Avatar>\n            <pre style={{width:'80%'}}><code className={language}>{code}</code></pre>\n        </Stack>\n    </div>);\n\n}\n\nexport default Solution;\n"],"names":["useEffect","Prism","_jsxs","style","margin","children","_jsx","Solution","step","code","language","_ref","Divider","Stack","direction","spacing","sx","Avatar","width","className"],"sourceRoot":""}