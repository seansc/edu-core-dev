{"version":3,"file":"static/js/896.d20b9ff6.chunk.js","mappings":"mKA+HA,QA7HA,WAEI,OAAOA,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAACC,OAAO,IAAIC,SAAA,EAGnCC,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,MACxBC,KAAM,oQAYVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,MACxBC,KAAM,kBAGVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,MACxBC,KAAM,4GAMVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,MACxBC,KAAM,+CAGVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,OACxBC,KAAM,yEAIVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,MACxBC,KAAM,oKAKVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,MACxBC,KAAM,mEAOVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,MACxBC,KAAM,kPAMVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,MACxBC,KAAM,kFAOVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,MACxBC,KAAM,qBAGVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,MACxBC,KAAM,yUAcVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,MACxBC,KAAM,sCAGVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,MACxBC,KAAM,gBAGVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,MACxBC,KAAM,gKAQVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,MACxBC,KAAM,yBAGVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,MACxBC,KAAM,iCAGVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,MACxBC,KAAM,mBAGVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,MACxBC,KAAM,oKAOV,C,sMCzFA,QAhBA,SAAgBC,GAA0B,IAAzB,KAACH,EAAI,KAAEE,EAAI,SAAED,GAASE,EAMnC,OAJAC,EAAAA,EAAAA,YAAU,KACNC,IAAAA,cAAoB,GACtB,KAEKX,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACHC,EAAAA,EAAAA,KAACQ,EAAAA,EAAO,KACRZ,EAAAA,EAAAA,MAACa,EAAAA,EAAK,CAACC,UAAU,MAAMC,QAAS,EAAGC,GAAI,CAACd,OAAO,GAAGC,SAAA,EAC9CC,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACD,GAAI,CAAEE,QAAQ,UAAWhB,OAAQ,GAAIC,SAAEG,KAC/CF,EAAAA,EAAAA,KAAA,OAAKH,MAAO,CAACkB,MAAM,OAAOhB,UAACC,EAAAA,EAAAA,KAAA,QAAMgB,UAAW,YAAYb,IAAWJ,SAAEK,WAIjF,C","sources":["courses/bsua-94/Lab6.jsx","courses/bsua-94/Snippet.jsx"],"sourcesContent":["import Snippet from './Snippet';\n\nfunction Lab6() {\n\n    return(<div style={{margin:50}}>\n\n\n<Snippet step=\"13\" language=\"jsx\"\n    code={`import { createGlobalStyle } from 'styled-components';\nimport { variables } from '@splunk/themes';\n\nconst GlobalStyles = createGlobalStyle\\`\n    body {\n        background-color: \\${variables.backgroundColorPage};\n    }\n\\`;\n\nexport { GlobalStyles };`}\n/>\n\n<Snippet step=\"16\" language=\"jsx\"\n    code={`GlobalStyles`}\n/>\n\n<Snippet step=\"17\" language=\"jsx\"\n    code={`            <>\n                <GlobalStyles/>\n                <MyReactComponent />\n            </>`}\n/>\n\n<Snippet step=\"18\" language=\"jsx\"\n    code={`                \"pageTitle\": \"BCG - Home\"`}\n/>\n\n<Snippet step=\"26\" language=\"bash\"\n    code={`cd ~/code/packages/my-react-component\nyarn add @splunk/react-icons`}\n/>\n\n<Snippet step=\"28\" language=\"jsx\"\n    code={`import FileLogs from '@splunk/react-icons/FileLogs';\nimport Magnifier from '@splunk/react-icons/Magnifier';\nimport Rocket from '@splunk/react-icons/Rocket';`}\n/>\n\n<Snippet step=\"29\" language=\"jsx\"\n    code={`icon={<Rocket/>}\n\nicon={<Magnifier/>}\n\nicon={<FileLogs/>}`}\n/>\n\n<Snippet step=\"32\" language=\"jsx\"\n    code={`import Globe from '@splunk/react-icons/Globe';\nimport InformationCircle from '@splunk/react-icons/InformationCircle';\nimport PlusCircle from '@splunk/react-icons/PlusCircle';\nimport MinusCircle from '@splunk/react-icons/MinusCircle';`}\n/>\n\n<Snippet step=\"33\" language=\"jsx\"\n    code={`icon={<InformationCircle/>}\n\nicon={<PlusCircle/>}\n\nicon={<MinusCircle/>}`}\n/>\n\n<Snippet step=\"34\" language=\"jsx\"\n    code={`icon={<Globe/>}`}\n/>\n\n<Snippet step=\"38\" language=\"jsx\"\n    code={`import React from 'react';\nimport Message from '@splunk/react-ui/Message';\n\nconst TabLogs = ({messages = []}) => {\n    return (<div style={{ margin: 25 }}>\n        {messages.map((item,i) => (\n            <Message key={i} type={item.type}>{item.text}</Message>\n        ))}\n    </div>);\n};\n\nexport default TabLogs;`}\n/>\n\n<Snippet step=\"41\" language=\"jsx\"\n    code={`import TabLogs from './TabLogs';`}\n/>\n\n<Snippet step=\"42\" language=\"jsx\"\n    code={`<TabLogs/>`}\n/>\n\n<Snippet step=\"46\" language=\"jsx\"\n    code={`    const [messages, setMessages] = useState([]);\n\n    function addLogMessage(msg) {\n        messages.push(msg);\n        setMessages(messages);\n    }`}\n/>\n\n<Snippet step=\"47\" language=\"jsx\"\n    code={`messages={messages}`}\n/>\n\n<Snippet step=\"48\" language=\"jsx\"\n    code={`sendMessage={addLogMessage}`}\n/>\n\n<Snippet step=\"51\" language=\"jsx\"\n    code={`{sendMessage}`}\n/>\n\n<Snippet step=\"52\" language=\"jsx\"\n    code={`        const type = (response.status >= 400) ? \"error\" : \"success\";\n        sendMessage({\"type\":type, \"text\":\"[\" + response.status + \"] \" + response.url});`}\n/>\n\n\n    </div>);\n\n}\n\nexport default Lab6;\n","import React, { useEffect } from \"react\";\n\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport Stack from '@mui/material/Stack';\n\n// https://prismjs.com/#languages-list\n\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-python';               // Python\nimport 'prismjs/components/prism-bash';                 // CLI\nimport 'prismjs/components/prism-javascript';           // JavaScript\nimport 'prismjs/components/prism-json';                 // JSON\nimport 'prismjs/components/prism-jsx';                  // React\nimport 'prismjs/components/prism-makefile';             // plain text\nimport 'prismjs/components/prism-properties';           // .conf files\nimport 'prismjs/components/prism-splunk-spl';           // SPL\nimport 'prismjs/components/prism-uri';                  // URLs\nimport '../../prism.css';\n\nfunction Snippet({step, code, language}) {\n\n    useEffect(() => {\n        Prism.highlightAll();\n    },[]);\n\n    return(<div>\n        <Divider/>\n        <Stack direction=\"row\" spacing={5} sx={{margin:3}}>\n            <Avatar sx={{ bgcolor:'#f56a00', margin: 2 }}>{step}</Avatar>\n            <pre style={{width:'90%'}}><code className={`language-${language}`}>{code}</code></pre>\n        </Stack>\n    </div>);\n\n}\n\nexport default Snippet;\n"],"names":["_jsxs","style","margin","children","_jsx","Snippet","step","language","code","_ref","useEffect","Prism","Divider","Stack","direction","spacing","sx","Avatar","bgcolor","width","className"],"sourceRoot":""}