{"version":3,"file":"static/js/958.928f7cb3.chunk.js","mappings":"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","sources":["courses/bsca/Lab2.jsx","courses/bsca/Snippet.jsx"],"sourcesContent":["import Snippet from './Snippet';\n\nfunction Lab2() {\n\n\n\nconst step32 = `cd ~/\nwget https://docs.splunk.com/images/Tutorial/tutorialdata.zip\nwget https://docs.splunk.com/images/d/db/Prices.csv.zip\nunzip tutorialdata.zip\nunzip Prices.csv.zip\nll`;\n\nconst step33 = `cd /opt/splunk/etc/apps/bcg_eventgen\nmkdir samples\ncp ~/www1/access.log samples/`;\n\nconst step34 = `mkdir lookups\ncp ~/prices.csv lookups/`;\n\nconst step37 = `nano local/eventgen.conf`;\n\nconst step38 = `[access.log]\nmode = replay\nsampletype = raw\nbackfill = -7d\nindex = bcg_sales\nhost = bcg_eventgen\nsource = bcg\nsourcetype = sales:web`;\n\n// eslint-disable-next-line\nconst step39 = `token.0.token = \\d{2}/\\w{3}/\\d{4}:\\d{2}:\\d{2}:\\d{2}\ntoken.0.replacementType = replaytimestamp\ntoken.0.replacement = %d/%b/%Y:%H:%M:%S`;\n\nconst step41 = `/opt/splunk/bin/splunk restart`;\n\nconst step57 = `index=bcg_sales sourcetype=\"sales:web\"`;\n\nconst step61 = `cd /opt/splunk/etc/apps/bcg_eventgen`;\n\nconst step62 = `nano samples/mtx_event.sample`;\n\nconst step63 = `timestamp=!timestamp! gameId=!1! addon=!2! amount=!3!`;\n\nconst step65 = `nano samples/games.sample`;\n\nconst step66 = `DB-SG-G01\nDC-SG-G02\nFS-SG-G03\nWC-SH-G04\nPZ-SG-G05\nCU-PG-G06\nMB-AG-G07\nFI-AG-G08\nBS-AG-G09\nSC-MG-G10\nWC-SH-A01\nWC-SH-A02\nSF-BVS-G01\nSF-BVS-01`;\n\nconst step68 = `nano samples/addons.sample`;\n\nconst step69 = `currency\nmap\nitem\nweapon\nskin\npet`;\n\nconst step72 = `nano local/eventgen.conf`;\n\nconst step73 = `[mtx_event.sample]\ninterval = 3m\nbackfill = -7d\nindex = bcg_sales\nhost = bcg_eventgen\nsource = bcg\nsourcetype = sales:addons`;\n\nconst step74 = `token.0.token = !timestamp!\ntoken.0.replacementType = timestamp\ntoken.0.replacement = %d/%b/%Y:%H:%M:%S`;\n\nconst step75 = `token.1.token = !1!\ntoken.1.replacementType = file\ntoken.1.replacement = $SPLUNK_HOME/etc/apps/bcg_eventgen/samples/games.sample\ntoken.2.token = !2!\ntoken.2.replacementType = file\ntoken.2.replacement = $SPLUNK_HOME/etc/apps/bcg_eventgen/samples/addons.sample`;\n\nconst step76 = `token.3.token = !3!\ntoken.3.replacementType = random\ntoken.3.replacement = float[1.00:5]`;\n\nconst step78 = `/opt/splunk/bin/splunk restart`;\n\nconst step87 = `index=bcg_sales sourcetype=sales:addons`;\n\n\n\n    return(<div style={{margin:50}}>\n        <Snippet step=\"32\" code={step32} language=\"language-bash\"/>\n        <Snippet step=\"33\" code={step33} language=\"language-bash\"/>\n        <Snippet step=\"34\" code={step34} language=\"language-bash\"/>\n        <Snippet step=\"37\" code={step37} language=\"language-bash\"/>\n        <Snippet step=\"38\" code={step38} language=\"language-properties\"/>\n        <Snippet step=\"39\" code={step39} language=\"language-properties\"/>\n        <Snippet step=\"41\" code={step41} language=\"language-bash\"/>\n        <Snippet step=\"57\" code={step57} language=\"language-splunk-spl\"/>\n        <Snippet step=\"61\" code={step61} language=\"language-bash\"/>\n        <Snippet step=\"62\" code={step62} language=\"language-bash\"/>\n        <Snippet step=\"63\" code={step63} language=\"language-makefile\"/>\n        <Snippet step=\"65\" code={step65} language=\"language-bash\"/>\n        <Snippet step=\"66\" code={step66} language=\"language-makefile\"/>\n        <Snippet step=\"68\" code={step68} language=\"language-bash\"/>\n        <Snippet step=\"69\" code={step69} language=\"language-makefile\"/>\n        <Snippet step=\"72\" code={step72} language=\"language-bash\"/>\n        <Snippet step=\"73\" code={step73} language=\"language-properties\"/>\n        <Snippet step=\"74\" code={step74} language=\"language-properties\"/>\n        <Snippet step=\"75\" code={step75} language=\"language-properties\"/>\n        <Snippet step=\"76\" code={step76} language=\"language-properties\"/>\n        <Snippet step=\"78\" code={step78} language=\"language-bash\"/>\n        <Snippet step=\"87\" code={step87} language=\"language-splunk-spl\"/>\n    </div>);\n\n}\n\nexport default Lab2;\n","import React, { useEffect } from \"react\";\n\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport Stack from '@mui/material/Stack';\n\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-python';               // Python\nimport 'prismjs/components/prism-bash';                 // CLI\nimport 'prismjs/components/prism-javascript';           // JavaScript\nimport 'prismjs/components/prism-makefile';             // plain text\nimport 'prismjs/components/prism-properties';           // .conf files\nimport 'prismjs/components/prism-splunk-spl';           // SPL\nimport 'prismjs/components/prism-uri';                  // URLs\nimport '../../prism.css';\n\n//import Gist from 'react-embed-gist';\n\nfunction Snippet({step, code, language}) {\n\n    useEffect(() => {\n        Prism.highlightAll();\n    },[]);\n\n    return(<div>\n        <Divider/>\n        <Stack direction=\"row\" spacing={5} sx={{margin:3}}>\n            <Avatar sx={{ bgcolor:'#f56a00', margin: 2 }}>{step}</Avatar>\n            <pre style={{width:'80%'}}><code className={language}>{code}</code></pre>\n        </Stack>\n    </div>);\n\n}\n\nexport default Snippet;\n\n\n/*\nimport Divider from '@mui/material/Divider';\nimport Typography from '@mui/material/Typography';\n\nfunction Lab6() {\n\n    return(<div style={{margin:50}}>\n        <Divider/>\n        <Typography variant=\"h6\" sx={{margin:5}}>\n          This lab does not require a solutions guide.\n        </Typography>\n    </div>);\n\n}\n\nexport default Lab6;\n*/"],"names":["_jsxs","style","margin","children","_jsx","Snippet","step","code","language","_ref","useEffect","Prism","Divider","Stack","direction","spacing","sx","Avatar","bgcolor","width","className"],"sourceRoot":""}