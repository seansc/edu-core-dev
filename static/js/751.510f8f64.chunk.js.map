{"version":3,"file":"static/js/751.510f8f64.chunk.js","mappings":"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","sources":["courses/bsua/Lab5.jsx","courses/bsua/Snippet.jsx"],"sourcesContent":["import Snippet from './Snippet';\n\nfunction Lab5() {\n\n\nconst step10 = `import React, { useState } from 'react';\n\nconst TabSearch = () => {\n    return (<div style={{ margin: 25 }}>\n        TAB SEARCH\n    </div>);\n};\n\nexport default TabSearch;`;\n\nconst step13 = `import TabSearch from './TabSearch';`;\n\nconst step14 = `<TabSearch/>`;\n\nconst step16 = `cd ~/code/packages/my-react-component\nyarn add @splunk/react-search\nyarn add @splunk/dashboard-utils`;\n\nconst step18 = `import SearchBar from '@splunk/react-search/components/Bar';\nimport searchBNF from \"@splunk/dashboard-utils/defaultSPLSyntax.json\";`;\n\nconst step20 = `    const [options, setOptions] = useState({\n        \"earliest\": \"-7d@d\",\n        \"latest\": \"now\",\n        \"search\": \"\",\n        \"syntax\": searchBNF\n    });`;\n\nconst step22 = `const handleOptionsChange = (option) => {\n    console.log(option);\n    setOptions({...options, ...option});\n};\n\nconst handleEventTrigger = (eventType) => {\n    console.log(eventType);\n};`;\n\nconst step23 = `    <SearchBar\n        options={options}\n        onOptionsChange={handleOptionsChange}\n        onEventTrigger={handleEventTrigger}\n    />`;\n\nconst step26 = `cd ~/code/packages/my-react-component\nyarn add @splunk/search-job`;\n\nconst step28 = `import SearchJob from '@splunk/search-job';\nimport * as config from '@splunk/splunk-utils/config';`;\n\nconst step31 = `    const job = SearchJob.create(options, {\n        app: config.app,\n        owner: config.username\n    });`;\n\nconst step34 = `    const progress = job.getProgress().subscribe({\n        next: searchState => {\n            console.log(searchState);\n        },\n        error: err => {\n            console.log(err);\n        },\n        complete: () => {\n            console.log(\"search complete!\");\n        }\n    });`;\n\nconst step37 = `    const results = job.getResults().subscribe({\n        next: response => {\n            console.log(response);\n        },\n        error: err => {\n            console.log(err);\n        },\n        complete: () => {\n            console.log(\"results retrieved!\");\n        }\n    });`;\n\nconst step41 = `index=bcg_sales sourcetype=sales:web`;\n\nconst step45 = `const [fields, setFields] = useState([]);\nconst [events, setEvents] = useState([]);\nconst [status, setStatus] = useState(\"\");\nconst [duration, setDuration] = useState(\"\");`;\n\nconst step47 = `        setStatus(searchState.content.dispatchState);\n        setDuration(searchState.content.runDuration);`;\n\nconst step49 = `        setFields(response.fields);\n        setEvents(response.results);`;\n\nconst step52 = `import JSONTree from '@splunk/react-ui/JSONTree';\nimport StaticContent from '@splunk/react-ui/StaticContent';`;\n\nconst step54 = `    <StaticContent>Status: {status} {duration}</StaticContent>\n    <StaticContent>Fields</StaticContent>\n    <JSONTree json={fields} expandChildrenOnShiftKey />\n    <StaticContent>Events</StaticContent>\n    <JSONTree json={events} expandChildrenOnShiftKey />`;\n\nconst step57 = `import Table from '@splunk/react-ui/Table';`;\n\nconst step59 = `    <Table>\n        <Table.Head>\n            {fields.map((field,i) => (\n                <Table.HeadCell key={'f'+i}>{field.name}</Table.HeadCell>\n            ))}\n        </Table.Head>\n        <Table.Body>\n            {events.map((event,i) => (\n                <Table.Row key={'r'+i}>\n                    {fields.map((field,ii) => (\n                        <Table.Cell key={'c'+ii}>{event[field.name]}</Table.Cell>\n                    ))}   \n                </Table.Row>\n            ))}\n        </Table.Body>\n    </Table>`;\n\nconst step62 = `        let filtered = response.fields.filter(f => !f.name.startsWith(\"_\"));\n        filtered.push({\"name\": \"_raw\"});\n\n        setFields(filtered);`;\n\n\n\n    return(<div style={{margin:50}}>\n        <Snippet step=\"10\" code={step10} language=\"language-jsx\"/>\n        <Snippet step=\"13\" code={step13} language=\"language-jsx\"/>\n        <Snippet step=\"14\" code={step14} language=\"language-jsx\"/>\n        <Snippet step=\"16\" code={step16} language=\"language-bash\"/>\n        <Snippet step=\"18\" code={step18} language=\"language-jsx\"/>\n        <Snippet step=\"20\" code={step20} language=\"language-jsx\"/>\n        <Snippet step=\"22\" code={step22} language=\"language-jsx\"/>\n        <Snippet step=\"23\" code={step23} language=\"language-jsx\"/>\n        <Snippet step=\"26\" code={step26} language=\"language-bash\"/>\n        <Snippet step=\"28\" code={step28} language=\"language-jsx\"/>\n        <Snippet step=\"31\" code={step31} language=\"language-jsx\"/>\n        <Snippet step=\"34\" code={step34} language=\"language-jsx\"/>\n        <Snippet step=\"37\" code={step37} language=\"language-jsx\"/>\n        <Snippet step=\"41\" code={step41} language=\"language-splunk-spl\"/>\n        <Snippet step=\"45\" code={step45} language=\"language-jsx\"/>\n        <Snippet step=\"47\" code={step47} language=\"language-jsx\"/>\n        <Snippet step=\"49\" code={step49} language=\"language-jsx\"/>\n        <Snippet step=\"52\" code={step52} language=\"language-jsx\"/>\n        <Snippet step=\"54\" code={step54} language=\"language-jsx\"/>\n        <Snippet step=\"57\" code={step57} language=\"language-jsx\"/>\n        <Snippet step=\"59\" code={step59} language=\"language-jsx\"/>\n        <Snippet step=\"62\" code={step62} language=\"language-jsx\"/>\n    </div>);\n\n}\n\nexport default Lab5;\n","import React, { useEffect } from \"react\";\n\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport Stack from '@mui/material/Stack';\n\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-python';               // Python\nimport 'prismjs/components/prism-bash';                 // CLI\nimport 'prismjs/components/prism-javascript';           // JavaScript\nimport 'prismjs/components/prism-json';                 // JSON\nimport 'prismjs/components/prism-jsx';                  // React\nimport 'prismjs/components/prism-makefile';             // plain text\nimport 'prismjs/components/prism-properties';           // .conf files\nimport 'prismjs/components/prism-splunk-spl';           // SPL\nimport 'prismjs/components/prism-uri';                  // URLs\nimport '../../prism.css';\n\nfunction Snippet({step, code, language}) {\n\n    useEffect(() => {\n        Prism.highlightAll();\n    },[]);\n\n    return(<div>\n        <Divider/>\n        <Stack direction=\"row\" spacing={5} sx={{margin:3}}>\n            <Avatar sx={{ bgcolor:'#f56a00', margin: 2 }}>{step}</Avatar>\n            <pre style={{width:'80%'}}><code className={language}>{code}</code></pre>\n        </Stack>\n    </div>);\n\n}\n\nexport default Snippet;\n"],"names":["_jsxs","style","margin","children","_jsx","Snippet","step","code","language","_ref","useEffect","Prism","Divider","Stack","direction","spacing","sx","Avatar","bgcolor","width","className"],"sourceRoot":""}