{"version":3,"file":"static/js/550.52be7def.chunk.js","mappings":"iMAsFA,QAhFA,WA+DI,OA7DAA,EAAAA,EAAAA,YAAU,KACNC,IAAAA,cAAoB,GACtB,KA2DKC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAACC,OAAO,IAAIC,SAAA,EAC3BC,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,IAAIC,KAxDb,0FAwD0BC,SAAS,gBAAgBC,MAAM,MAC/DL,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,IAAIC,KAtDb,wGAsD0BC,SAAS,gBAAgBC,MAAM,MAC/DL,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,IAAIC,KApDb,oCAoD0BC,SAAS,gBAAgBC,MAAM,MAC/DL,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,IAAIC,KAnDb,8BAmD0BC,SAAS,eAAeC,MAAM,MAC9DL,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,IAAIC,KAlDb,yUAkD0BC,SAAS,kBAAkBC,MAAM,MACjEL,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,IAAIC,KAvCb,2PAuC0BC,SAAS,kBAAkBC,MAAM,SACjEL,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,IAAIC,KA/Bb,gPA+B0BC,SAAS,kBAAkBC,MAAM,SACjEL,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,KAAKC,KAzBb,2BAyB2BC,SAAS,gBAAgBC,MAAM,MACjEL,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,KAAKC,KAxBb,8DAwB2BC,SAAS,yBAAyBC,MAAM,MAC1EL,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,KAAKC,KArBb,4BAqB2BC,SAAS,gBAAgBC,MAAM,MACjEL,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,KAAKC,KApBb,iGAoB2BC,SAAS,yBAAyBC,MAAM,MAC1EL,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,KAAK,KAAKC,KAhBb,iCAgB2BC,SAAS,gBAAgBC,MAAM,OAGzE,C,gKCpDA,QAhBA,SAAiBC,GAAiC,IAAhC,KAACJ,EAAI,KAAEC,EAAI,SAAEC,EAAQ,MAAEC,GAAMC,EAM3C,OAJAZ,EAAAA,EAAAA,YAAU,KACNC,IAAAA,cAAoB,GACtB,KAEKC,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACHC,EAAAA,EAAAA,KAACO,EAAAA,EAAO,KACRX,EAAAA,EAAAA,MAACY,EAAAA,EAAK,CAACC,UAAU,MAAMC,QAAS,EAAGC,GAAI,CAACb,OAAO,GAAGC,SAAA,EAC9CC,EAAAA,EAAAA,KAACY,EAAAA,EAAM,CAACD,GAAI,CAAEb,OAAQ,GAAIC,SAAEG,KAC5BF,EAAAA,EAAAA,KAAA,OAAKa,UAAU,eAAe,YAAWR,EAAOR,MAAO,CAACiB,MAAM,OAAOf,UAACC,EAAAA,EAAAA,KAAA,QAAMa,UAAWT,EAASL,SAAEI,WAI9G,C","sources":["courses/bsca/Lab4.js","courses/bsca/Solution.js"],"sourcesContent":["import React, { useEffect } from \"react\";\n\nimport Solution from './Solution';\n\nimport Prism from 'prismjs';\n\nfunction Lab4() {\n\n    useEffect(() => {\n        Prism.highlightAll();\n    },[]);\n\n\n\nconst step2 = `pip install -t /tmp splunk-sdk\ncp -r /tmp/splunklib /opt/splunk/etc/apps/buttercup/bin`;\n\nconst step3 = `ll /opt/splunk/etc/apps/buttercup/bin\nll /opt/splunk/etc/apps/buttercup/bin/splunklib/searchcommands`;\n\nconst step4 = `cd /opt/splunk/etc/apps/buttercup`;\n\nconst step5 = `nano bin/bcgReviewScores.py`;\n\nconst step6 = `import sys\n\nfrom splunklib.searchcommands import dispatch, StreamingCommand, Configuration\n\n@Configuration()\nclass GetReviewScoresCommand(StreamingCommand):\n    def stream(self, events):\n        for event in events:\n            yield event\n\ndispatch(GetReviewScoresCommand, sys.argv, sys.stdin, sys.stdout, __name__)`;\n\nconst step7 = `import sys\nfrom random import randint\n\n# for lab brevity, just return a random number from 1 to 5!\ndef getAvgReviewScore(productId):\n    return str(randint(1,5))\n\nfrom splunklib.searchcommands import dispatch, StreamingCommand, Configuration`;\n\nconst step8 = `class GetReviewScoresCommand(StreamingCommand):\n    def stream(self, events):\n        for event in events:\n            productId = event[\"productId\"]\n            event[\"review\"] = getAvgReviewScore(productId)\n            yield event`;\n\nconst step12 = `nano local/commands.conf`;\n\nconst step13 = `[getreviews]\nchunked = true\nfilename = bcgReviewScores.py`;\n\nconst step17 = `nano local/searchbnf.conf`;\n\nconst step18 = `[getreviews-command]\nsyntax = getreviews\nshortdesc = get online game reviews\nusage = public`;\n\nconst step20 = `/opt/splunk/bin/splunk restart`;\n\n\n\n    return(<div style={{margin:50}}>\n        <Solution step=\"2\" code={step2} language=\"language-bash\" lines=\"\" />\n        <Solution step=\"3\" code={step3} language=\"language-bash\" lines=\"\"/>\n        <Solution step=\"4\" code={step4} language=\"language-bash\" lines=\"\"/>\n        <Solution step=\"5\" code={step5} language=\"language-xml\" lines=\"\"/>\n        <Solution step=\"6\" code={step6} language=\"language-python\" lines=\"\"/>\n        <Solution step=\"7\" code={step7} language=\"language-python\" lines=\"2-6\"/>\n        <Solution step=\"8\" code={step8} language=\"language-python\" lines=\"4-5\"/>\n        <Solution step=\"12\" code={step12} language=\"language-bash\" lines=\"\"/>\n        <Solution step=\"13\" code={step13} language=\"language-solution-file\" lines=\"\"/>\n        <Solution step=\"17\" code={step17} language=\"language-bash\" lines=\"\"/>\n        <Solution step=\"18\" code={step18} language=\"language-solution-file\" lines=\"\"/>\n        <Solution step=\"20\" code={step20} language=\"language-bash\" lines=\"\"/>\n    </div>);\n\n}\n\nexport default Lab4;\n","import React, { useEffect } from \"react\";\n\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport Stack from '@mui/material/Stack';\n\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-python';\nimport 'prismjs/components/prism-bash';\nimport 'prismjs/components/prism-solution-file';\nimport '../../prism.css';\n\nimport 'prismjs/plugins/line-highlight/prism-line-highlight.js';\n// eslint-disable-next-line\nimport 'prismjs/plugins/line-highlight/prism-line-highlight.css';\n\nfunction Solution({step, code, language, lines}) {\n\n    useEffect(() => {\n        Prism.highlightAll();\n    },[]);\n\n    return(<div>\n        <Divider/>\n        <Stack direction=\"row\" spacing={5} sx={{margin:3}}>\n            <Avatar sx={{ margin: 2 }}>{step}</Avatar>\n            <pre className=\"line-numbers\" data-line={lines} style={{width:'80%'}}><code className={language}>{code}</code></pre>\n        </Stack>\n    </div>);\n\n}\n\nexport default Solution;\n"],"names":["useEffect","Prism","_jsxs","style","margin","children","_jsx","Solution","step","code","language","lines","_ref","Divider","Stack","direction","spacing","sx","Avatar","className","width"],"sourceRoot":""}