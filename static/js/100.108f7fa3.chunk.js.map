{"version":3,"file":"static/js/100.108f7fa3.chunk.js","mappings":"oKAoFA,QAlFA,WAEI,OAAOA,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAACC,OAAO,IAAIC,SAAA,EAGnCC,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,IAAIC,SAAS,OACvBC,KAAM,iCAIVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,IAAIC,SAAS,MACvBC,KAAM,4BAGVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,IAAIC,SAAS,OACvBC,KAAM,qGAKVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,MACxBC,KAAM,4BAGVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,SACxBC,KAAM,sLAKVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,SACxBC,KAAM,8MASVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,SACxBC,KAAM,4RASVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,OACxBC,KAAM,wDAIVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,OACxBC,KAAM,qBAGVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,MACxBC,KAAM,6CAGVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,aACxBC,KAAM,sJAKVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,aACxBC,KAAM,mIAUV,C,uMC9CA,QAhBA,SAAgBC,GAA0B,IAAzB,KAACH,EAAI,KAAEE,EAAI,SAAED,GAASE,EAMnC,OAJAC,EAAAA,EAAAA,YAAU,KACNC,IAAAA,cAAoB,GACtB,KAEKX,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACHC,EAAAA,EAAAA,KAACQ,EAAAA,EAAO,KACRZ,EAAAA,EAAAA,MAACa,EAAAA,EAAK,CAACC,UAAU,MAAMC,QAAS,EAAGC,GAAI,CAACd,OAAO,GAAGC,SAAA,EAC9CC,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACD,GAAI,CAAEE,QAAQ,UAAWhB,OAAQ,GAAIC,SAAEG,KAC/CF,EAAAA,EAAAA,KAAA,OAAKH,MAAO,CAACkB,MAAM,OAAOhB,UAACC,EAAAA,EAAAA,KAAA,QAAMgB,UAAW,YAAYb,IAAWJ,SAAEK,WAIjF,C","sources":["courses/usra/Lab2.jsx","courses/usra/Snippet.jsx"],"sourcesContent":["import Snippet from './Snippet';\n\nfunction Lab2() {\n\n    return(<div style={{margin:50}}>\n\n\n<Snippet step=\"3\" language=\"bash\"\n    code={`cd ~/labs/lab2\nnano get.sh`}\n/>\n\n<Snippet step=\"4\" language=\"uri\"\n    code={`/services/data/indexes`}\n/>\n\n<Snippet step=\"9\" language=\"bash\"\n    code={`\\\\\n| xmlstarlet sel -N a=\"http://www.w3.org/2005/Atom\" -t \\\\\n-m /a:feed/a:entry -v a:title -n`}\n/>\n\n<Snippet step=\"14\" language=\"uri\"\n    code={`/services/data/indexes`}\n/>\n\n<Snippet step=\"19\" language=\"python\"\n    code={`#print(response.content)\nprint(\"Request: [\" + response.request.method + \"] \" + response.request.url)\nprint(\"Response: [\" + str(response.status_code) + \"] \" + response.reason)`}\n/>\n\n<Snippet step=\"20\" language=\"python\"\n    code={`# XML / Atom namespaces\n# '' = atom, s = splunk\nns = {\n    '': 'http://www.w3.org/2005/Atom',\n    's': 'http://dev.splunk.com/ns/rest',\n    'opensearch': 'http://a9.com/-/spec/opensearch/1.1/'\n}`}\n/>\n\n<Snippet step=\"21\" language=\"python\"\n    code={`if (response.status_code == 200):\n    # get xml root element\n    root = ET.fromstring(response.text)\n    # for all entries in the atom namespace\n    for entry in root.findall('entry', ns):\n        # print the entry title\n        print(\" \" + entry.find('title', ns).text)`}\n/>\n\n<Snippet step=\"26\" language=\"bash\"\n    code={`--data-urlencode \"output_mode=json\" \\\\\n| jq '.'`}\n/>\n\n<Snippet step=\"32\" language=\"bash\"\n    code={`'.entry[].name'`}\n/>\n\n<Snippet step=\"37\" language=\"uri\"\n    code={`/services/data/indexes?output_mode=json`}\n/>\n\n<Snippet step=\"42\" language=\"javascript\"\n    code={`//console.log(data);\nconsole.log(\"Request: [GET] \" + response.url);\nconsole.log(\"Response: [\" + response.status + \"] \" + response.statusText);`}\n/>\n\n<Snippet step=\"43\" language=\"javascript\"\n    code={`if (response.status === 200) {\n    data.entry.forEach(function(entry) {\n        console.log(\" \" + entry.name);\n    });\n}`}\n/>\n\n\n    </div>);\n\n}\n\nexport default Lab2;\n","import React, { useEffect } from \"react\";\n\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport Stack from '@mui/material/Stack';\n\n// https://prismjs.com/#languages-list\n\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-python';               // Python\nimport 'prismjs/components/prism-bash';                 // CLI\nimport 'prismjs/components/prism-javascript';           // JavaScript\nimport 'prismjs/components/prism-json';                 // JSON\nimport 'prismjs/components/prism-jsx';                  // React\nimport 'prismjs/components/prism-makefile';             // plain text\nimport 'prismjs/components/prism-properties';           // .conf files\nimport 'prismjs/components/prism-splunk-spl';           // SPL\nimport 'prismjs/components/prism-uri';                  // URLs\nimport '../../prism.css';\n\nfunction Snippet({step, code, language}) {\n\n    useEffect(() => {\n        Prism.highlightAll();\n    },[]);\n\n    return(<div>\n        <Divider/>\n        <Stack direction=\"row\" spacing={5} sx={{margin:3}}>\n            <Avatar sx={{ bgcolor:'#f56a00', margin: 2 }}>{step}</Avatar>\n            <pre style={{width:'80%'}}><code className={`language-${language}`}>{code}</code></pre>\n        </Stack>\n    </div>);\n\n}\n\nexport default Snippet;\n"],"names":["_jsxs","style","margin","children","_jsx","Snippet","step","language","code","_ref","useEffect","Prism","Divider","Stack","direction","spacing","sx","Avatar","bgcolor","width","className"],"sourceRoot":""}