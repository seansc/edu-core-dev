{"version":3,"file":"static/js/836.d47356ce.chunk.js","mappings":"iKAwFA,QAtFA,WAkEI,OAAOA,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAACC,OAAO,IAAIC,SAAA,EAC3BC,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,IAAIC,KA/DZ,0FA+DyBC,SAAS,mBACxCJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,IAAIC,KA7DZ,wGA6DyBC,SAAS,mBACxCJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,IAAIC,KA3DZ,oCA2DyBC,SAAS,mBACxCJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,IAAIC,KA1DZ,8BA0DyBC,SAAS,kBACxCJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,IAAIC,KAzDZ,yUAyDyBC,SAAS,qBACxCJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,IAAIC,KA9CZ,6JA8CyBC,SAAS,qBACxCJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,IAAIC,KAzCZ,2GAyCyBC,SAAS,qBACxCJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,KAtCZ,2BAsC0BC,SAAS,mBAC1CJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,KArCZ,8DAqC0BC,SAAS,yBAC1CJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,KAlCZ,4BAkC0BC,SAAS,mBAC1CJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,KAjCZ,iGAiC0BC,SAAS,yBAC1CJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,KA7BZ,iCA6B0BC,SAAS,mBAC1CJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,KA5BZ,WA4B0BC,SAAS,yBAC1CJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,KA3BZ,6FA2B0BC,SAAS,yBAC1CJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,KAxBZ,wTAwB0BC,SAAS,0BAGlD,C,sMCpDA,QAhBA,SAAgBC,GAA0B,IAAzB,KAACH,EAAI,KAAEC,EAAI,SAAEC,GAASC,EAMnC,OAJAC,EAAAA,EAAAA,YAAU,KACNC,IAAAA,cAAoB,GACtB,KAEKX,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACHC,EAAAA,EAAAA,KAACQ,EAAAA,EAAO,KACRZ,EAAAA,EAAAA,MAACa,EAAAA,EAAK,CAACC,UAAU,MAAMC,QAAS,EAAGC,GAAI,CAACd,OAAO,GAAGC,SAAA,EAC9CC,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACD,GAAI,CAAEE,QAAQ,UAAWhB,OAAQ,GAAIC,SAAEG,KAC/CF,EAAAA,EAAAA,KAAA,OAAKH,MAAO,CAACkB,MAAM,OAAOhB,UAACC,EAAAA,EAAAA,KAAA,QAAMgB,UAAWZ,EAASL,SAAEI,WAInE,C","sources":["courses/bsca/Lab4.jsx","courses/bsca/Snippet.jsx"],"sourcesContent":["import Snippet from './Snippet';\n\nfunction Lab4() {\n\n\n\nconst step2 = `pip install -t /tmp splunk-sdk\ncp -r /tmp/splunklib /opt/splunk/etc/apps/buttercup/bin`;\n\nconst step3 = `ll /opt/splunk/etc/apps/buttercup/bin\nll /opt/splunk/etc/apps/buttercup/bin/splunklib/searchcommands`;\n\nconst step4 = `cd /opt/splunk/etc/apps/buttercup`;\n\nconst step5 = `nano bin/bcgReviewScores.py`;\n\nconst step6 = `import sys\n\nfrom splunklib.searchcommands import dispatch, StreamingCommand, Configuration\n\n@Configuration()\nclass GetReviewScoresCommand(StreamingCommand):\n    def stream(self, events):\n        for event in events:\n            yield event\n\ndispatch(GetReviewScoresCommand, sys.argv, sys.stdin, sys.stdout, __name__)`;\n\nconst step7 = `from random import randint\n\n# for lab brevity, just return a random number from 1 to 5!\ndef getAvgReviewScore(productId):\n    return str(randint(1,5))`;\n\nconst step8 = `\n            productId = event[\"productId\"]\n            event[\"review\"] = getAvgReviewScore(productId)`;\n\nconst step12 = `nano local/commands.conf`;\n\nconst step13 = `[getreviews]\nchunked = true\nfilename = bcgReviewScores.py`;\n\nconst step17 = `nano local/searchbnf.conf`;\n\nconst step18 = `[getreviews-command]\nsyntax = getreviews\nshortdesc = get online game reviews\nusage = public`;\n\nconst step20 = `/opt/splunk/bin/splunk restart`;\n\nconst step22 = `| getrev`;\n\nconst step23 = `tag=bcg_sales\n| stats sum(price) as \"Total Sales\" by productName, productId\n| getreviews`;\n\nconst step27 = `tag=bcg_sales\n| eval web=if(eventtype=\"bcg_web_sales\",price,null())\n| eval mtx=if(eventtype=\"bcg_mtx_sales\",price,null())\n| stats sum(web) as \"Web\", sum(mtx) as \"Micro\", sum(price) as \"Total\" by productName, productId\n| getreviews\n| rename productId as \"ID\", productName as \"Name\", review as \"Avg Review\"`;\n\n\n\n    return(<div style={{margin:50}}>\n        <Snippet step=\"2\" code={step2} language=\"language-bash\"/>\n        <Snippet step=\"3\" code={step3} language=\"language-bash\"/>\n        <Snippet step=\"4\" code={step4} language=\"language-bash\"/>\n        <Snippet step=\"5\" code={step5} language=\"language-xml\"/>\n        <Snippet step=\"6\" code={step6} language=\"language-python\"/>\n        <Snippet step=\"7\" code={step7} language=\"language-python\"/>\n        <Snippet step=\"8\" code={step8} language=\"language-python\"/>\n        <Snippet step=\"12\" code={step12} language=\"language-bash\"/>\n        <Snippet step=\"13\" code={step13} language=\"language-properties\"/>\n        <Snippet step=\"17\" code={step17} language=\"language-bash\"/>\n        <Snippet step=\"18\" code={step18} language=\"language-properties\"/>\n        <Snippet step=\"20\" code={step20} language=\"language-bash\"/>\n        <Snippet step=\"22\" code={step22} language=\"language-splunk-spl\"/>\n        <Snippet step=\"23\" code={step23} language=\"language-splunk-spl\"/>\n        <Snippet step=\"27\" code={step27} language=\"language-splunk-spl\"/>\n    </div>);\n\n}\n\nexport default Lab4;\n","import React, { useEffect } from \"react\";\n\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport Stack from '@mui/material/Stack';\n\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-python';               // Python\nimport 'prismjs/components/prism-bash';                 // CLI\nimport 'prismjs/components/prism-javascript';           // JavaScript\nimport 'prismjs/components/prism-json';                 // JSON\nimport 'prismjs/components/prism-jsx';                  // React\nimport 'prismjs/components/prism-makefile';             // plain text\nimport 'prismjs/components/prism-properties';           // .conf files\nimport 'prismjs/components/prism-splunk-spl';           // SPL\nimport 'prismjs/components/prism-uri';                  // URLs\nimport '../../prism.css';\n\nfunction Snippet({step, code, language}) {\n\n    useEffect(() => {\n        Prism.highlightAll();\n    },[]);\n\n    return(<div>\n        <Divider/>\n        <Stack direction=\"row\" spacing={5} sx={{margin:3}}>\n            <Avatar sx={{ bgcolor:'#f56a00', margin: 2 }}>{step}</Avatar>\n            <pre style={{width:'80%'}}><code className={language}>{code}</code></pre>\n        </Stack>\n    </div>);\n\n}\n\nexport default Snippet;\n"],"names":["_jsxs","style","margin","children","_jsx","Snippet","step","code","language","_ref","useEffect","Prism","Divider","Stack","direction","spacing","sx","Avatar","bgcolor","width","className"],"sourceRoot":""}